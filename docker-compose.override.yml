services:
  laravel:
    volumes:
      - ./.env.prod:/var/www/html/.env
    environment:
      APP_ENV: "production"
      APP_DEBUG: "false"
  traefik:
    image: traefik:v3.0
    container_name: traefik-proxy
    command:
      # Enable API and Dashboard (secure)
      - --api.dashboard=true
      - --api.insecure=false

      # Entry points for HTTPS (production)
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Docker provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=kanboard_kanboard

      # Logging
      - --log.level=INFO
      - --accesslog=true

      # Let's Encrypt - automatic SSL generation & renewal
      - --certificatesresolvers.le.acme.email=bilyesc@gmail.com
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      # Uncomment for production if you want to use HTTP challenge instead:
      # - --certificatesresolvers.le.acme.httpchallenge=true
      # - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - kanboard
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Dashboard: HTTPS only
      - "traefik.http.routers.traefik.rule=Host(`traefik.kanboard.info`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=le"

      # wordpress vulnerability blocking middleware
      - "traefik.http.middlewares.block-wp-attacks.replacepathregex.regex=^/(wp-admin|wp-content|wp-includes|wp-login|xmlrpc\\.php|wp-config\\.php|atomlib\\.php|bless\\.php|class\\.php|mail\\.php|themes\\.php|wp-conflg\\.php|readme\\.html|license\\.txt|\\.well-known/.*\\.php).*"
      - "traefik.http.middlewares.block-wp-attacks.replacepathregex.replacement=/404"

  nginx:
    ports: []
    labels:
      - "traefik.enable=true"

      # HTTP router (redirects to HTTPS)
      - "traefik.http.routers.kanboard-app-http.rule=Host(`app.kanboard.info`) || Host(`kanboard.info`) || Host(`www.kanboard.info`)"
      - "traefik.http.routers.kanboard-app-http.entrypoints=web"
      - "traefik.http.routers.kanboard-app-http.service=kanboard-app"
      - "traefik.http.routers.kanboard-app-http.middlewares=block-wp-attacks,redirect-to-https"

      # HTTPS router
      - "traefik.http.routers.kanboard-app.rule=Host(`app.kanboard.info`) || Host(`kanboard.info`) || Host(`www.kanboard.info`)"
      - "traefik.http.routers.kanboard-app.service=kanboard-app"
      - "traefik.http.routers.kanboard-app.entrypoints=websecure"
      - "traefik.http.routers.kanboard-app.tls.certresolver=le"
      - "traefik.http.routers.kanboard-app.middlewares=block-wp-attacks"

      # Service definition (shared by both HTTP and HTTPS routers)
      - "traefik.http.services.kanboard-app.loadbalancer.server.port=80"

      # Redirect middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

  phpmyadmin:
    ports: []
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`db.kanboard.info`)"
      - "traefik.http.routers.phpmyadmin.service=phpmyadmin"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin.tls.certresolver=le"
      - "traefik.http.middlewares.phpmyadmin-whitelist.ipwhitelist.sourcerange=46.193.68.168/32"
      - "traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-whitelist"
